c
counter
tag_instance
c
tag_instance
counter
c
tag_instance.count
c
tag_instance.count
c
tag_instance.count
tag_instance
c
unique_tags
Tag.all
c
Tag.all
c
Tag.all
c
Tag.all
c
Tag.all
c
Tag.all
c
Tag.all
c
Tag.all
c
Tag.all
c
Tag.all
c
unique_tags
tag_count
c
unique_tags
c
downcase_tags.uniq
c
Tag.all
c
Tag.all
c
Tag.all
c
Tag.all
c
Tag.all
c
Tag.all
c
tag_instance
tag_instance.count
Tag.find_by(tag_name: name)
Tag.all.count
Tag.all
tag_instance
c
unique_tags
c
tags
c
tags
c
tags
c
tags
c
@tag_1
tags
c
tags
c
tags
c
downcase_tags
tags
c
tags
c
tags
c
tags
c
response[:message]
ticket
response
response.message
c
tags
c
ticket
c
Ticket.all
c
Ticket.all
c
Ticket.all
c
Ticket.all
c
Ticket.all
c
ticket_params
tag
tags
c
Ticket.all
Tag.all
Task.all
c
ticket_params
c
ticket_params
c
tags
Tag.all
c
tags
Tag.all
c
Tag.all
tags
c
tags
c
ticket[:errors].value
ticket[:errors]
ticket
response.message
response
c
tag
c
tag
c
tag
c
C
Tag.order(count: :desc).first
c
Tag.order(count: :desc).first
pp _
Tag.order(count: :desc)
Tag.all
c
ENV['webhook_api_url']
ENV
c
webhook_api_url
ENV['webhook_api_url']
c
ENV['webhook_api_url']
c
Tag.all.count
Tag.all
exit
tag
c
answer
c
x
c
x
c
x
c
x
c
x
c
x
counter
exit
x
c
counter
c
x
c
counter
x
c
x
c
x
c
x
c
x
c
x
c
x
c
x
c
Tag.find_by(tag_name: tag_name)
c
Tag.find_by(tag_name: tag_name)
c
tag_name
Tag.find_by(tag_name)
Tag.all
c
Tag.all
c
tag_name
c
downcase_tags.uniq
downcase_tags
c
tags
c
ticket_params[:tags]
ticket_params
c
params
c
ticket_params
params
